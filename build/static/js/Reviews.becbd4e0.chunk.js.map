{"version":3,"sources":["components/Reviews/Reviews.js"],"names":["Reviews","movieID","useParams","useState","reviews","setReviews","useEffect","moviesAPI","then","data","results","length","map","el","author","content","id"],"mappings":"wLAiCeA,UA7BC,WACd,IAAQC,EAAYC,cAAZD,QACR,EAA8BE,mBAAS,MAAvC,mBAAOC,EAAP,KAAgBC,EAAhB,KAQA,OANAC,qBAAU,WACRC,IAA2BN,GAASO,MAAK,SAAAC,GACvCJ,EAAWI,EAAKC,cAEjB,CAACT,IAEAG,GAA8B,IAAnBA,EAAQO,OACd,yEAGL,mCACE,6BACGP,GACCA,EAAQQ,KAAI,SAAAC,GAAE,OACZ,+BACE,4BAAIA,EAAGC,SACP,4BAAID,EAAGE,YAFAF,EAAGG","file":"static/js/Reviews.becbd4e0.chunk.js","sourcesContent":["import * as moviesAPI from '../../services/movies-api';\r\nimport { useParams } from 'react-router';\r\nimport { useState, useEffect } from 'react';\r\n\r\nconst Reviews = () => {\r\n  const { movieID } = useParams();\r\n  const [reviews, setReviews] = useState(null);\r\n\r\n  useEffect(() => {\r\n    moviesAPI.fetchReviewsById(movieID).then(data => {\r\n      setReviews(data.results);\r\n    });\r\n  }, [movieID]);\r\n\r\n  if (reviews && reviews.length === 0) {\r\n    return <p>We don't have any reviews for this movie</p>;\r\n  } else {\r\n    return (\r\n      <>\r\n        <ul>\r\n          {reviews &&\r\n            reviews.map(el => (\r\n              <li key={el.id}>\r\n                <p>{el.author}</p>\r\n                <p>{el.content}</p>\r\n              </li>\r\n            ))}\r\n        </ul>\r\n      </>\r\n    );\r\n  }\r\n};\r\n\r\nexport default Reviews;\r\n"],"sourceRoot":""}